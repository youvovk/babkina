{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","theme","root","& > *","margin","spacing","width","marginTop","apply","position","height","fontSize","right","top","genCharArray","split","sort","App","classes","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","results","setResults","_useState5","Infinity","_useState6","record","setRecord","_useState7","_useState8","value","setValue","react_default","a","createElement","className","map","letter","concat","toLocaleLowerCase","includes","filter","length","Button","onClick","toConsumableArray","variant","color","noValidate","autoComplete","TextField","id","label","onChange","event","target","replace","result","ReactDOM","render","src_App","document","getElementById"],"mappings":"6OAOMA,EAAYC,YAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,CACPC,OAAQH,EAAMI,QAAQ,GACtBC,MAAO,OACPC,UAAW,SAGfC,MAAO,CACLF,MAAO,cACPG,SAAU,WACVC,OAAQ,OACRC,SAAU,OACVC,MAAO,SACPC,IAAK,UAIT,SAASC,IACP,MAAO,yMAAoCC,MAAM,IAAIC,OA2DxCC,MAxDf,WACE,IAAMC,EAAUnB,IADHoB,EAEWC,mBAAS,IAFpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAENK,EAFMH,EAAA,GAEAI,EAFAJ,EAAA,GAAAK,EAGiBN,mBAAS,IAH1BO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGNE,EAHMD,EAAA,GAGGE,EAHHF,EAAA,GAAAG,EAIeV,mBAASW,KAJxBC,EAAAV,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAING,EAJMD,EAAA,GAIEE,EAJFF,EAAA,GAAAG,EAKaf,mBAAS,IALtBgB,EAAAd,OAAAC,EAAA,EAAAD,CAAAa,EAAA,GAKNE,EALMD,EAAA,GAKCE,EALDF,EAAA,GAOb,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACZ5B,IAAe6B,IAAI,SAAAC,GAAM,OACxBL,EAAAC,EAAAC,cAAA,OACEC,UAAS,oBAAAG,OAAsBrB,EAAKsB,oBAAoBC,SAASH,GAAU,2BAA6B,KAEvGA,KAIJ9B,IAAekC,OAAO,SAAAJ,GAAM,OAAKpB,EAAKsB,oBAAoBC,SAASH,KAASK,OAAS,EAE9EV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQC,QAAS,WACX3B,EAAKT,MAAM,KAAKkC,QAAUhB,GAC5BC,EAAUV,EAAKT,MAAM,KAAKkC,QAG5BpB,EAAU,GAAAgB,OAAAvB,OAAA8B,EAAA,EAAA9B,CAAKM,GAAL,CAAcJ,KACxBC,EAAQ,IACRa,EAAS,KACRI,UAAWxB,EAAQV,MAAO6C,QAAQ,YAAYC,MAAM,WARvD,4GAYJ,IAINf,EAAAC,EAAAC,cAAA,QAAMC,UAAWxB,EAAQhB,KAAMqD,YAAU,EAACC,aAAa,OACrDjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWpB,MAAOA,EAAOqB,GAAG,iBAAiBC,MAAM,WAAWC,SAAU,SAAAC,GACtEpC,EAAQoC,EAAMC,OAAOzB,MAAM0B,QAAQ,SAAU,KAAKA,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,KACvFzB,EAASuB,EAAMC,OAAOzB,WAI1BE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,wHACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,gGAAsCH,EAAAC,EAAAC,cAAA,YAAOjB,EAAKyB,OAASzB,EAAKT,MAAM,KAAKkC,OAAS,KAEtFV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWd,EAAQe,IAAI,SAAAqB,GACpC,OAAOzB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAAUsB,EAAvB,IAA+BzB,EAAAC,EAAAC,cAAA,0CAAcuB,EAAOjD,MAAM,KAAKkC,OAAhC,KAA0ChB,IAAWF,KAAYE,GAAU+B,EAAOjD,MAAM,KAAKkC,OAAS,+FAAsB,WC1E5KgB,IAASC,OAAO3B,EAAAC,EAAAC,cAAC0B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.17d8661b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './App.scss';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '90vw',\r\n      marginTop: '50px',\r\n    },\r\n  },\r\n  apply: {\r\n    width: 'fit-content',\r\n    position: 'absolute',\r\n    height: '50px',\r\n    fontSize: '18px',\r\n    right: '-275px',\r\n    top: '36%',\r\n  }\r\n}));\r\n\r\nfunction genCharArray() {\r\n  return 'бвгґджзклмнпрстфхцчшщйаеєиіїоуюяь'.split('').sort();\r\n}\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [text, setText] = useState('');\r\n  const [results, setResults] = useState([]);\r\n  const [record, setRecord] = useState(Infinity);\r\n  const [value, setValue] = useState('');\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"alphabet\">\r\n        {genCharArray().map(letter => (\r\n          <div \r\n            className={`alphabet__letter ${text.toLocaleLowerCase().includes(letter) ? 'alphabet__letter--active' : ''}`}\r\n          >\r\n            {letter}\r\n          </div>\r\n        ))}\r\n\r\n        {genCharArray().filter(letter => !text.toLocaleLowerCase().includes(letter)).length < 1\r\n            ? (\r\n                <Button onClick={() => {\r\n                  if (text.split(' ').length <= record) {\r\n                    setRecord(text.split(' ').length);\r\n                  }\r\n\r\n                  setResults([...results, text]);\r\n                  setText('');\r\n                  setValue('');\r\n                }} className={classes.apply} variant=\"contained\" color=\"primary\">\r\n                  Зберегти результат!\r\n                </Button>\r\n              ) \r\n          : ''\r\n        }\r\n      </div>\r\n\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <TextField value={value} id=\"standard-basic\" label=\"Standard\" onChange={event => {\r\n          setText(event.target.value.replace(/\\s\\s+/g, ' ').replace(/^\\s/g, '').replace(/\\s+$/g, ''))\r\n          setValue(event.target.value);\r\n        }} />\r\n      </form>\r\n\r\n      <div className=\"bottom\">\r\n        <div className=\"header\">\r\n          <p className=\"results__title\">Попередні результати:</p>\r\n          <p className=\"used\">Використано слів: <span>{text.length ? text.split(' ').length : 0}</span></p>\r\n        </div>\r\n        <div className=\"results\">{results.map(result => {\r\n          return <p className=\"result\">{result} <span>(слів: {result.split(' ').length}) {record === Infinity || record >= result.split(' ').length ? 'Кращий результат!' : ''}</span></p>\r\n        })}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}